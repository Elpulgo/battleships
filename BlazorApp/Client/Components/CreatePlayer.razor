@using Core.Models
@using Client.Services

@inject IGamePlayService GamePlayService

<h6>Create Player</h6>
<div class="form-group">
    <input class="form-control input_width" id="name" @bind="Name" />
    <small id="namehelp" class="form-text text-muted">Name</small>
</div>

@if(!IsOtherPlayerConnected){
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="opponentType" @bind="IsOpponentComputer" />
        <label class="form-check-label" for="opponentType">Play vs Computer</label>
    </div>
}

<div class="form-group pt-2">
    <button class="btn btn-success" @onclick=@OnReady>Create</button>
</div>

@if(ShowError){
    <ErrorMessage Error="Name can't be empty!"></ErrorMessage>
}

@code {
    [Parameter]
    public bool IsOtherPlayerConnected { get; set; }
    public string Name { get; set; }
    public bool IsOpponentComputer { get; set; } = false;
    public bool ShowError { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsOtherPlayerConnected = await GamePlayService.IsOtherPlayerCreated();
        IsOpponentComputer = false;
    }

    public async Task OnReady()
    {
        ShowError = false;

        if (string.IsNullOrEmpty(Name))
        {
            ShowError = true;
            return;
        }

        await GamePlayService.CreatePlayerAsync(Name, PlayerType.Human, IsOpponentComputer);
    }
}