@using Core.Utilities
@using Core.Models
@using static Core.Models.CoordinatesHelper
@using Client.Models

<div class="container-fluid p-0">
    <div class="row no-gutters">
        <div class="col table-cell-column"></div>
        @foreach(var column in Enum.GetValues(typeof(Core.Models.CoordinatesHelper.Column))){
            <div class="col table-cell-column">@column.ToString()</div>
        }
    </div>
    @foreach (var row in Enumerable.Range(1, Core.Utilities.GameConstants.MaxRowCount))
    {   
        <div class="row no-gutters">
            <div class="col table-cell-row">
                @row
            </div>
            @foreach(Column column in Enum.GetValues(typeof(Column))){
                @if(MarkedCoordinates.Any(a => a.Key == CoordinateKey.Build(column, row))){
                   <div class="col table-cell">*</div>
                } else {
                    <div class="col table-cell"></div>
                }
            }
        </div>
    }
</div>

@code {
    // TODO: OnClick and mark and pass upstream to get hit/miss

    [Parameter]
    public bool IsOpponentTurn { get; set; }
    [Parameter]
    public EventCallback<CoordEventArgs> OnCoordMarked { get; set; }
    [Parameter]
    public List<CoordinateContainer> MarkedCoordinates { get; set; }
    protected override Task OnInitializedAsync()
    {
        return Task.CompletedTask;
    }

    // TODO: Show board.. pass down from parent.

}