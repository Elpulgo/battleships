@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using Core.Utilities
@using Core.Models.Ships
@using Core.Models
@inject NavigationManager NavigationManager
@implements IDisposable

<hr>
<h1>Opponent board</h1>

@* <OpponentBoard /> *@

<hr>
<h1>Your board</h1>
<PlayerBoard GameMode=@GameMode.Setup OnAllShipsMarked=@OnAllShipsMarked />

@if(@IsAllShipsMarked)
{
    <div><span>
        All ships are now marked
    </span></div>
}

@code {
    private bool IsAllShipsMarked;
    private HubConnection hubConnection;
    private List<string> items = new List<string>();

    public List<IShip> ships = new List<IShip>();

    protected override async Task OnInitializedAsync()
    {
        var generator = new ShipGenerator();
        ships = generator.Generate().ToList();

        items = ships.Select(ship => ship.Name).ToList();

        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();
@* 
        hubConnection.On<string, string>("CoordinateMarked", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        hubConnection.On<string, string>("GameFinished", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        hubConnection.On<string, string>("OpponentReady", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        }); *@

        await hubConnection.StartAsync();
    }

    @* Task Send() =>
        hubConnection.SendAsync("SendMessage", userInput, messageInput); *@

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void OnAllShipsMarked(Models.AllShipsMarkedEventArgs eventArgs)
    {
        IsAllShipsMarked = true;
        StateHasChanged();
        // TODO: Sen api call, all ships are marked    
    }

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
}